[package]
name = "front"
version = "0.1.0"
edition = "2021"
rust-version = "1.75"


[dependencies]
egui = "0.25.0"
eframe = { version = "0.25.0", default-features = false, features = [
    # "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    # "default_fonts", # Embed the default egui fonts.
    "glow",        # Use the glow rendering backend. Alternative: "wgpu".
    "persistence", # Enable restoring app state when restarting the app.
] }
log = "0.4"
serde_json = "*"
ehttp = "*"
poll-promise = { version = "*", features = ["web"] }
web-sys = { version = "0.3.66", features = [
    "Url",
    "Blob",
    "BlobPropertyBag",
    "HtmlAnchorElement",
    "File",
] }
zip = { version = "*", default-features = false }
ethers = { version = "2", features = ["rustls", "abigen"] }
getrandom = { version = "*", features = ["js"] }

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.10"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"


[profile.release]
lto = true
codegen-units = 1
opt-level = "z"   # fast and small wasm
panic = "abort"
strip = true

# Optimize all dependencies even in debug builds:
[profile.dev]
opt-level = 2
debug = true


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
